%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.4 (Build 18E226) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 380 480
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 380 480
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.69897962 0.54567963 0.40313229 sc
q
154.35164 259.56412 m
156.30482 233.00931 282.13156 154.82857 282.86569 152.63498 c
283.19196 151.66005 270.1369 120.84203 243.70052 60.180885 c
254.69971 55.923191 l
295.24863 120.16776 314.48169 155.71278 312.39899 162.55829 c
309.41711 172.35909 276.87463 204.60023 214.77161 259.28174 c
154.35164 259.56412 l
h
W*
28 0.11771537 324.92557 290.44641 rc
83.103401 166.52832 m
172.86865 294.72638 l
344.07468 174.84663 l
254.30942 46.648571 l
h
f
Q
0.18529543 0.21041553 0.46436542 sc
q
246.59505 73.880547 m
264.55292 67.368752 l
302.41971 109.92874 317.26245 145.04477 314.55606 162.93683 c
312.75183 174.86488 280.32166 207.05231 217.26552 259.49908 c
153.06383 259.49908 l
155.25443 198.00209 271.88013 152.40089 273.44003 149.78032 c
274.99994 147.15974 259.64847 121.49329 246.59505 73.880547 c
h
W*
28 0.11771537 324.92557 290.44641 rc
89.658829 177.6646 m
172.95766 296.62766 l
348.17886 173.93645 l
264.88004 54.973389 l
h
f
Q
0.89253825 0.89253825 0.89253825 sc
q
246.31 89.061295 m
308.40173 66.461746 l
293.29758 24.963356 l
231.20583 47.562904 l
h
W
239.62505 62.212528 m
237.37982 59.587074 235.98256 57.519737 235.43324 56.010525 c
234.76515 54.174965 234.09604 51.385128 233.42589 47.64101 c
235.55527 46.865978 254.69235 39.90065 290.83716 26.74502 c
294.12424 31.134222 294.23218 34.110424 291.16098 35.673626 c
288.08975 37.236832 285.5488 38.563805 283.53806 39.654552 c
261.18362 61.26276 l
260.75348 61.678543 260.06772 61.666904 259.65192 61.236759 c
259.64481 61.229401 259.63782 61.221943 259.63089 61.214386 c
256.40128 57.677933 l
252.9203 57.372616 250.2496 57.558521 248.38921 58.235649 c
246.87767 58.785805 245.01244 60.156029 242.79346 62.346321 c
242.79347 62.346333 l
241.94194 63.186871 240.57024 63.177952 239.72969 62.326412 c
239.69347 62.289707 239.65857 62.251724 239.62505 62.212528 c
h
W*
28 0.11771537 324.92557 290.44641 rc
237.17734 75.421394 m
305.6123 50.513096 l
294.53494 20.078249 l
226.09996 44.986546 l
h
f
Q
0.60000002 0.4614 0.34799999 sc
q
168.81911 259.56412 m
112.76664 125.51813 l
57.675797 12.193535 l
70.673508 12.193535 l
212.87782 259.56412 l
168.81911 259.56412 l
h
W*
28 0.11771537 324.92557 290.44641 rc
52.675797 264.56412 m
217.87782 264.56412 l
217.87782 7.1935344 l
52.675797 7.1935344 l
h
f
Q
0.89253825 0.89253825 0.89253825 sc
q
56.898388 17.318884 m
55.686527 14.083849 55.080597 11.663297 55.080597 10.057224 c
55.080597 8.1038618 55.406013 5.2534199 56.056843 1.5058986 c
58.322884 1.5058986 78.688148 1.5058986 117.15263 1.5058986 c
118.7403 6.754652 117.82381 9.5882854 114.40316 10.006798 c
110.98251 10.425311 108.14093 10.803194 105.8784 11.140449 c
77.481659 23.799856 l
76.935249 24.043447 76.294823 23.797966 76.051231 23.251556 c
76.047066 23.242208 76.04303 23.232801 76.039131 23.223341 c
74.213814 18.795565 l
71.047188 17.318094 68.473976 16.579359 66.494179 16.579359 c
64.885643 16.579359 62.664238 17.228996 59.829967 18.528269 c
59.829975 18.528282 l
58.74231 19.026884 57.456383 18.549355 56.957783 17.461689 c
56.936291 17.414808 56.916481 17.367176 56.898388 17.318884 c
h
W*
53.997372 0.67319191 66.07666 44.161663 rc
50.080597 28.893988 m
122.90759 28.893988 l
122.90759 -3.4941013 l
50.080597 -3.4941013 l
h
f
Q
0.36185208 0.38961485 0.67028064 sc
q
62.650761 35.735416 m
91.531822 30.340208 l
113.86258 63.043816 207.31772 197.13959 217.56418 259.56412 c
153.26842 259.56412 l
119.05025 214.4375 83.936584 68.980003 62.650761 35.735416 c
h
W*
28 0.11771537 324.92557 290.44641 rc
57.650761 264.56412 m
222.56418 264.56412 l
222.56418 25.340208 l
57.650761 25.340208 l
h
f
Q
0.69897962 0.54567963 0.40313229 sc
q
140.44193 474.54352 m
283.36609 438.90851 l
255.91714 328.8168 l
112.99297 364.45178 l
h
W
188.87236 390.00327 m
185.43408 396.84534 183.87781 404.56781 186.35472 412.16873 c
193.49141 434.06912 223.57953 421.35806 226.86472 408.58746 c
230.14989 395.81689 222.30992 367.45563 213.93692 367.40717 c
210.59778 367.38785 204.40022 371.01981 198.60782 376.78287 c
195.41104 345.76157 l
170.1859 352.0509 l
188.87236 390.00327 l
h
W*
0 0 380 480 rc
185.50479 434.15948 m
239.35175 420.73392 l
217.97176 334.98349 l
164.1248 348.40906 l
h
f
Q
0.099249616 0.095094085 0.27768919 sc
q
140.44193 474.54352 m
283.36609 438.90851 l
255.91714 328.8168 l
112.99297 364.45178 l
h
W
227.98648 402.94156 m
228.10025 404.46234 227.89342 406.23425 227.74474 407.73697 c
227.55299 409.67419 226.99152 411.51776 226.31046 413.29309 c
225.02823 416.63553 223.27959 419.80112 221.17328 422.59177 c
217.32582 427.68918 211.75198 431.46579 205.53787 432.23999 c
202.40036 432.63092 199.15672 432.21661 196.16245 430.92746 c
193.45714 429.7627 190.63467 427.75885 187.645 428.30972 c
184.39203 428.90927 182.15439 432.44373 180.01688 434.815 c
177.60675 437.48837 174.87976 439.67844 171.63213 441.0752 c
166.19153 443.41476 160.39017 442.84396 155.33168 439.2066 c
149.94875 435.33591 145.1308 428.89255 146.24092 421.70883 c
146.44725 420.37344 146.84634 419.19153 147.57317 418.11319 c
148.23978 417.12433 149.34735 415.97293 149.38737 414.6485 c
149.42964 413.24072 147.90053 411.81946 147.1757 410.73944 c
146.1373 409.19205 145.18777 407.53278 144.90625 405.63965 c
144.44406 402.53064 145.64622 399.15292 147.18109 396.65103 c
148.74304 394.10507 150.99818 392.30618 153.5831 391.09164 c
155.30913 390.2807 157.11511 389.62042 158.99365 389.29492 c
159.92621 389.1333 160.79733 389.18396 161.73473 389.16327 c
162.64633 389.14316 163.07199 388.79572 163.68723 388.1441 c
166.54506 385.11667 169.99194 383.36166 174.00009 382.70654 c
177.38289 382.15381 181.40173 381.99744 184.66685 383.57422 c
188.29295 385.32544 189.09268 388.78763 189.3044 392.64697 c
189.96133 392.09259 191.97566 391.34851 191.10352 393.12286 c
190.75797 393.82562 189.89053 394.29279 189.3466 394.79111 c
188.71323 395.37128 188.0976 396.0705 187.69048 396.86081 c
186.04665 400.05194 189.69495 404.80246 192.80057 404.96088 c
197.41463 405.1962 196.87598 398.94516 199.54987 396.62677 c
201.08725 395.29373 203.23338 396.05673 204.86339 396.97571 c
207.04683 398.20688 208.80304 400.12122 210.40446 402.11563 c
211.72346 403.758 212.98953 405.44128 214.32269 407.07031 c
214.94524 407.83105 216.96397 409.91708 216.49854 411.06879 c
219.72177 410.91003 222.82774 408.79175 225.05965 406.4729 c
225.98207 405.51434 226.62718 404.55026 226.90855 403.19391 c
226.9688 402.90329 227.04851 402.06418 227.3822 401.94742 c
228.00342 401.72995 227.95781 402.55945 227.98648 402.94156 c
W*
0 0 380 480 rc
147.64288 452.45157 m
239.85306 429.46097 l
223.79768 365.06635 l
131.58749 388.05692 l
h
f
Q
0.69897962 0.54567963 0.40313229 sc
q
52.846981 375.92557 m
330.07458 371.08655 l
326.47562 164.90256 l
49.248028 169.74158 l
h
W
257.6698 268.94098 m
291.77686 243.09378 l
301.103 240.41431 308.87674 237.14743 315.09808 233.29315 c
316.5596 231.92072 318.30679 229.16248 312.15625 229.74126 c
306.00571 230.32004 299.51016 230.65358 298.62387 228.57809 c
297.73761 226.50262 301.42093 223.93779 299.6539 221.14738 c
298.47586 219.28712 293.1478 224.09622 283.66965 235.57469 c
249.70477 250.28853 l
257.6698 268.94098 l
h
125.00882 270.38507 m
147.64038 269.90146 l
132.8819 225.25424 124.92177 201.56697 123.75999 198.83963 c
121.14597 192.70314 126.285 183.19817 128.46463 178.10042 c
121.0207 174.94038 122.02036 187.10703 112.62717 182.95601 c
104.05351 179.16716 97.459297 172.14595 87.738388 178.35068 c
86.543259 179.11351 85.26815 181.92944 88.504845 184.05605 c
96.568634 189.3542 108.21838 198.66991 109.82468 201.77515 c
112.01515 206.00969 117.07653 228.87967 125.00882 270.38507 c
h
W*
0 0 380 480 rc
83.130821 276.98834 m
322.2309 272.81482 l
320.38315 166.95793 l
81.283081 171.13142 l
h
f
Q
0.90829611 0.46209422 0.075046249 sc
q
52.846981 375.92557 m
330.07458 371.08655 l
326.47562 164.90256 l
49.248028 169.74158 l
h
W
190.97807 363.76566 m
200.37131 365.20062 l
234.59808 334.72455 247.86877 277.09241 289.93082 245.95084 c
279.45844 233.48502 l
205.72684 243.87846 188.63419 314.19162 190.97807 363.76566 c
h
W*
0 0 380 480 rc
186.77991 371.65668 m
306.84424 359.03741 l
292.97049 227.03729 l
172.90614 239.65657 l
h
f
Q
0.86646914 0.89152956 0.91185695 sc
q
52.846981 375.92557 m
330.07458 371.08655 l
326.47562 164.90256 l
49.248028 169.74158 l
h
W
148.10794 247.36424 m
185.65948 246.70877 213.28163 246.22662 230.97435 245.9178 c
234.76091 245.8517 234.14238 251.3049 233.64293 254.05988 c
227.87866 285.85571 203.81438 320.44165 204.60167 365.54523 c
180.76419 369.69214 l
160.44141 338.397 152.92445 299.56079 148.10794 247.36424 c
h
W*
0 0 380 480 rc
145.3405 375.31122 m
241.17101 373.63852 l
238.85194 240.77953 l
143.02144 242.45226 l
h
f
Q
1 0.6085 0.13 sc
q
52.846981 375.92557 m
330.07458 371.08655 l
326.47562 164.90256 l
49.248028 169.74158 l
h
W
150.37552 339.11221 m
146.9213 340.16577 144.21262 342.52972 142.24947 346.20401 c
133.78685 362.04288 137.09273 370.62433 146.47876 373.30023 c
155.86479 375.97614 164.0889 369.98322 178.9644 369.72357 c
179.7735 369.70944 180.51367 369.64603 181.18491 369.53336 c
188.66023 368.97784 l
208.86528 296.20114 213.94308 247.79233 203.89363 223.7514 c
138.67131 224.88986 l
134.65045 215.9908 130.82091 208.51128 127.18269 202.45131 c
109.41078 202.76152 l
108.67752 256.60458 122.33244 302.05481 150.37552 339.11221 c
h
W*
0 0 380 480 rc
107.35513 379.76175 m
216.05637 377.86435 l
212.88112 195.95467 l
104.17989 197.85207 l
h
f
Q
q
0 0 380 480 rc
25 0 0 38 138 224 cm
save
225 10 cg_miaiproc 
76 -38 -38{
gsave 1 75 div 1 114 div scale 0 exch translate
currentfile 0 (EOD
)/SubFileDecode filter
L3?{flushfile}{cvx exec}ifelse
75 39 scale
BI
/Width 75
/Height 39
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource ImageDataSource
/MaskedImage true
ID
EI
grestore} bind for
0 38 m 0 0 l 75 0 l 75 38 l h W n EOD
JcD&9pAbR#Rj%g$+oe#Ts-nK]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%c2RNVX"+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M++9.fRs-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23RsuU]Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#To919rRj%g$
+oe#Ts-k23Rj%g$+oafs+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#TpAd&MRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$Ij+i]+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2/Qlt^T*rh]Qs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts!sQ^s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+8cP8's-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe$]+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+n:^;k`$Y`Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23(7QKIRj%g$+oe#Ts-k23Rj%g$+oe#TpAeP"Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-nK]
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k1qN?72>*WMTPs-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%e4
Rj%M+F8q^Qs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rqs8JRj%g$
+oe#Ts-k23Rj%Qm+Q\M%jbk/WR3;O!+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!.Y$<+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-j9;s-k2"O<3MA<upC\*Vl$Es-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+nktds-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$*?kEN+QeS&jbk/@M]MMV+9.fRs-k23Rj%g$+oe#u+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!.Y$<+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-kbeoopQ[M]Lo;
*T`2"o919rRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-kS`s-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nktds-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$7j72Y*p&;#jbk/@M]M8K*rh]Qs-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Ri!=KRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+
!.Y$<+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
qj:V2jbk/@M]Lo;*T`2"m#N4fRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$"!R]6+nktds-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%<b?m"Kg*T`2"jbk/@M]M&A*rh]Qs-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%M+#61/9s-k23J"%V]Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Tk`$YFM]Lo;*EhK^*T`2"k)18[Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAc04Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%f]Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2,Q6>:I*T`2"jbk/@M]Lo;
*T`2"rL"f.Rj%g$+oe#T7/r`"s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+0`RUcs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+od%]+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+mtF5jbk/@M]Lo;*T`2"jbk/@M]MY\+TIoSs-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k/bs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAdY^
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts*pL]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TrgFtlM]Lo;
*T`2"jbk/@M]Lo;*T`2"pQcp$Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rir^MRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+>5t'8s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
J"%V]Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%Hh+6AD$jbk/@M]Lo;*T`2"jbk/@M]MGS+9.fRs-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+U.n8+oe#TpAf.3Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%fNRj%g$
+oe#Tl]*%JM]Lo;*T`2"jbk/@M]Lo;*T`2"nWG!oRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nktds-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oI`Njbk/@M]Lo;"<HT^*T^L`*T`2"jbk/@
M]M5I*rh]Qs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k2+!.Y$<+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k2&P98nE*T`2"jbjusjbk/@M]Lo;*T`2"jbk/FNZS4i+oe#Ts$iJ$s-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nktds-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+m=n,jbk/@M]Lo;/fj&3
*T`2"jbk/@M]Lo;*TrA%s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k230q0?dRj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!.Y$<+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Tpm*&aM]Lo;*T`2"jblJHjbk/@M]Lo;*T`2"jbk/@M]Mba+TIoSs-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%eORj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+nktds-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%6_*p&;#
jbk/@M]Lo;=<6L]*T`2"jbk/@M]Lo;*T`2"q3N6(Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+o_e:+oe#Ts-k2+!.Y$<+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+o[oQk)18AM]Lo;*T`2"jbmLejbk/@M]Lo;*T`2"jbk/@
M]MMV+9.fRs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#TpAb9pRj!:]Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k2)PTT"F*T`2"jbk/@M]Lo;*T`2b*T`2"jbk/@M]Lo;*T`2"nrk0qRj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+(]TsJs-k23
Rj%g$+oe#Ts-k23Rj%g$+b0N]+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+mY.0jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*U]"1s-lP&s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAccERj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#TJ,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Tr0\\hM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/ENZS4i+oe#Ts-k23
Rj%g$+oe#Ts-k23Rkl5fRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%M+63!Dts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k0]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%?d+6AD$jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*Ti8#s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$*[1QQ+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAe7oRj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj!:]Rj%g$+oe#Ts-k23Rj%g$+oe#Tk`$YFM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Mba+TIoSs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#<+oe#Ts-k23Rj%M+C]BkIs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%To+EZ_'
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"q3N6(Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!.Y$<+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2#OWNVB*T`2"jbk/@M]Lo;*T`2"jbj*Z?fd1djbk/@
M]Lo;*T`2"jbk/@M]MJT+9.fRs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nktds-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%d"+Qn\(jbk/@M]Lo;*T`2"jbk/@M]Lo;'clCo*T`2"jbk/@M]Lo;*T`2"jbk-OnWG!oRj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+
!.Y$<+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#ToopQ[M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbkT/jbk/@M]Lo;*T`2"jbk/@M]Lo;*USq0s-k23Rj%g$+oe#Ts-k23RisZhRj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nktds-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%*X*p&;#jbk/@M]Lo;*T`2"jbk/@M]Lo;598jD*T`2"jbk/@M]Lo;*T`2"jbk/D
N?8+h+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+X$fS+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k2+!.Y$<+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+o7NJjbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbm(Yjbk/@M]Lo;*T`2"jbk/@M]Lo;*Ti8#s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T$ic\>s-k23Rj%g$+nktds-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2$OWW\C*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;?le?e*T`2"jbk/@
M]Lo;*T`2"jbk/@M]M_`+TIoSs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%P,IfTM<+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+m4e)
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"j^F&fjbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"pm*'&Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAbm,
Rj%g$+oe#Ts-k23Rj%g$+oe$]+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Tp6?`]M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@9T'qQM]MDQ+9.fRs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj!:
~> 0 39 m 0 0 l 75 0 l 75 39 l h W n EOD
pAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2*Poo+G*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2e*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*V5I:s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nksDs-k23Rj%g$+oe$]+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+mb72jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@<JqmZM]Lo;*T`2"
jbk/IO<4Fk+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k2+!$D61+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-nK]s-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Tr0\\hM]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"l&?baRj%esRj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nksns-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23RsuU]Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%<b+6AD$jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lr<*WDKMs-k23Rj%g$+oe#Ts-k23Rj%g$+oa'^+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!(m3[+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$Ij+i]+oe#Ts-k23Rj%g$+oe#Tk`$YFM]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/UQQZ<t+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Trt_(Is-k23Rj%g$+oe#Ts-k23Rj%g$+nktC
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%Nl+6AE1*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*VGX=s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23!Lk8,!-A10+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
m>rCNM]Lo;*T`2"jbk/@M]Lo;*T`2"jbmpqjbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/KOWXUm+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%]t+QeS&jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`1b*T`2"jbk/@McUq\M]Lo;*T`2"jbk/@M]Lo;*UJh.s-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Tnrk0WM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Ei"M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lu>666)q+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%!T*p&;#jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`27*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/WR3;O!+oe#T
s-k23Rj%g$+oe#`+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+o%?Gjbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@ManfL
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*VYjAs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-jiKs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2"O<3MA*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2a*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/MP99go+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rfai6Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%`u+QeS&jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@MdRReM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*U]"1s-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!!`Im+oe#Ts*pL]s-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
o919XM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Gs^M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/DN?8+h+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+nksUs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23J"%V]Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%$U*p&;#jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*CT"I*Ti8#rgFu0Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!&4GB+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%f]Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+o.HIjbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*Vl$Es-k23Rj%g$+oe#T0E7Lbs-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nkt*s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+od%]+oe#Ts-k2#OWNVB*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/NP99go+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k/Ms-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k2+!*]Dl+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+o[oQk)18AM]Lo;*T`2"jaW1/jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*USq0s-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Riqt8Rj%g$+nktTs-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2(PTT"F*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@E/PauM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/CN?8+h+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TlAcqIM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@MZb'^M]Ln`M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"r0\]-Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2.
QQYCJ*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`1s*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T]bK*T`2"jbk/@M]MMV+9.fRs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+n1U9jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M_6%3M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/KOWXUm+oe#Ts"Tuds-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
pAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#TrgFtmN#h#<*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2H*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*U8Y+s-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23*1J,ORj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%Hh+6AD$jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@Mc_"]M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/AM]Mec+TIoSs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%e:Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Tl]*%JM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2e*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"pm*'&Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nks<s-k0]s-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2.QQYCJ*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;>oi$b*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]MAP+9.fRs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!#P[)+oe#Ts-k23Rj%g$+oe#Ts-k23Rj!:]Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+n(O7jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2M*T`2"jbk/@M]Lo;
*T`2"m>rChRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nksf
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+b0N]+oe#Ts-k23Rj%g$+oe#T
rgFtlM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*TrA%s-kefs-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!($XS+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nV!@J)uS/jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]M\^+TIoSs-k23Rj%g$+oe#Ts-k23RiWaQRj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+nkt;s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k1rN?72>*T`2"jbk/@M]Lo;*T`2"jbk./jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"oopQuRj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$#pK><+oe#Ts-k2+!,MV(+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%Qm+Q\M%jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Hp$M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]M5I*rh]Qs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k2!O<3MA*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`1Z*FIod*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"kDUG]Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%]t+QeS&jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M\R8o
M]Lo;*T`2"jbk/@M]Lo;*T`2"9'(sOjbk/@M]Lo;*T`2"jbk/@M]Lo;*Vu*Fs-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Tnrk0WM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2/*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk-:jbk/NP99go+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%!T*p&;#jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@Ma&6DM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"m#N4fRj%g$
+oe#Ts-k23RirpSRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nq9Ejbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2Y*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lr<*WDKMs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+Ue=>+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k1uNumD@*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@MdRReM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/RQ66-r+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2,!.P"KRj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%Zr+Q\M%jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T^^f*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*Uo15s-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nksMs-k23Rj%g$+oe#Ts-k23Rj%g$Ij+i]+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Tn<"gSM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"j\1RQjbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/DN?8+h+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k0^
~> 0 39 m 0 0 l 75 0 l 75 39 l h W n EOD
pAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%9`+6AD$jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2e*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*U/P)s-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nksDs-k23Rj%g$+oe$]+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+o[oQkDUGCM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@<JqmZM]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]M_`+TIoSs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k2+!$D61+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-nK]s-k23Rj%g$+oe#Ts-k2)
PTT"F*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]LnEM]Lo;*T`2"jbk/@M]Lo;
*T`2"oTUHtRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nksns-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TlAcqIMglc/M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*UPA=*rh]Qs-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!(m3[+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k2-QQYCJ*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;Ii[X/*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/BN#hqf+oe#Ts-k23Rj%g$+oe#Trt_(Is-k23Rj%g$+oe#Ts-k23Rj%g$+nktC
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+n(O7jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`3/*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"q3N6(Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23!Lk8,!-A10+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#TrL"ejM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbmpqjbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]M;L+9.fRs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nLm>jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`1b*T`2"jbk/@McUq\M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"k`$Y`Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k1rN?72>*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Ei"M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;6650G*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*VbpCs-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%Qm
+Q\M%jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`27*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`22*T`2"jbk/JOWOOl+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Tm>rCNM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@ManfL
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"kDUG]Rj%g$
+oe#Ts-jiKs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k20R3:XM*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2a*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*VbpCs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rfai6Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+n:^;jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@MdRReM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/JOWOOl+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!!`Im+oe#Ts*pL]s-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#TrgFtmN#h#<*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Gs^M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*TrA%s-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+nksUs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23J"%V]Rj%Eg+6AD$jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*CT"I*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]MPX+9.fRs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!&4GB+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k1rN?72>*T`2"jbk/@M]Lo/M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"0BJ*4jbk/@M]Lo;*T`2"mu\[k
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nkt*s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%Nl
+6AD$jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T_d/*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*TrA%s-k/Ms-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k2+!*]Dl+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Tm#N4LM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jaW1/jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]MPX+9.fRs-k23Rj%g$+oe#Ts-k23Riqt8Rj%g$+nktTs-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k2/QltLK*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@E/PauM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"m#N4fRj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Tmu\[QM]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@MZb'^M]Ln`M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*W)3Hs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#T
s-k23Rj%g$+oe#Ts-k21R3:XM*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`1s*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T]bK*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/K
OWXUm+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$+nLm>jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M_6%3M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jY;Z6jbk/@M]Lo;*T`2"jbk/@M]Lo;*TrA%rgFu0Rj%g$+oe#Ts-k23Rj%g$+oe#T
pAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k1qN?72>*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2H*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@*/bj!M]MJT+9.fRs-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%Kj
+6AD$jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@Mc_"]M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/ENZS4i+oe#Ts-k23
Rj%e:Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#TlAcqIM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2e*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"q3N6(Rj%g$+oe#Ts-k23Rj%g$+nks<s-k0]s-k23Rj%g$
+oe#Ts-k2-QQYCJ*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;>oi$b*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]M5I*rh]Qs-k23Rj%g$+oe#Ts-k2+!#P[)+oe#Ts-k23Rj%g$+oe#TmZ8LOM]I</M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2M*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"k)18YR3;O!+oe#Ts-k23Rj%g$+nksf
s-k23Rj%g$+oe#Ts-k20R3:XM*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*Im1/*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbko8jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*V5I:s-k23Rj%g$+oe#Ts-k2+!($XS+oe#Ts-k23Rj%g$+n:^;jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"J)uS/jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]No#M]Lo;*T`2"jbk/CN?8(f+TIoS
s-k23Rj%g$+nkt;s-k23Rj%g$+oe#TrgFtmN#h#<*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk./jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/OPTTpp#pK><+oe#Ts-k2+!,MV(+oe#Ts-k23Rj%Eg
+6AD$jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Hp$M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*U&J(rgFu0Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k1rN?72>*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`1Z*FIod*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]MDQ+9.fRs-k23Rj%M+J,bu]
s-k23Rj%Nl+6AD$jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M\R8o
M]Lo;*T`2"jbk/@M]Lo;*T`2"9'(sOjbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"kDUG\RNVX"+oe#TpAf^CRj%g$+oe#Tm#N4LM]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2/*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk-:jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*V,C9
s-k23Rj%M+J,bu]s-k2/QltLK*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@Ma&6DM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Er%M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/BN#hkb+TIoSpAf^CRj%g$+n(O7jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2Y*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*=Lte*T`2"nWG!oRj%M+J,bu]n!,JbEd*XdF-L`cQ?7#3F_mOiBq9E[TQatAG[dIn?`/0TWHqdM
H<@=s<j6sMZ[G]YI878#9Y#UE]REAbImq2(6Gn@?`dp=oJiq/,3m<48c%It%Keh)10[th/eqP^.LFCr6
-f'S)hh`Q9MBLu;*p&;#jbk/@MdRReM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*Ti8#rL"f'!.P"KRj"_Y
C0Y8L>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8
>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#`mHVdX"EUgmu1
B4dcMB:NdOR;Q])EG:YZC6<^UO*GDuHY\LeCkmOXKS+/oL2MNuDgdL^H]<#jO)]<*Ec[IdE0bT`RWN>7
F_RFjAtaEZU3L.EG[@:n?)i0QXEmsOHW7J)<VHJ,p6R1=AtiO?X'B/8>[sg>A#ijEJ#cgaX'B/8>[sg>
A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijE
X'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>YJY.>[sg>A#ijE
X'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8
>[sgb
~> 0 39 m 0 38 l 75 38 l 75 39 l h W n EOD
pAf^:QRHEWU0M3/>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>
A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijE
X'B.BX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijE
X'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX'B/8>[sg>A#ijEX6fk;s+13$s+13$s+13$s+13$s+13$s+13$
s+13$s+13$s+13$s+13$s+13$s+13$s+13$s+13$s+13$s+13$s+13$s+13$s+13$s+13$s+13$s+13$
s+13$s+13$s+13$s+13$s+13$s+13$s+13$s+13$s+13$s+13$s+13$s+13$s0VfV
~> restore
ep
end
%%Trailer
%%EOF
