%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.4 (Build 18E226) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 380 480
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 380 480
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.69897962 0.54567963 0.40313229 sc
q
75.525589 439.72015 m
217.80608 477.84409 l
247.17221 368.24817 l
104.89172 330.12424 l
h
W
158.86974 389.25909 m
152.54544 393.57642 147.44035 399.57617 145.92172 407.4249 c
141.5461 430.03934 174.0242 433.509 183.08878 423.93228 c
192.15337 414.35556 199.04619 385.74936 191.74648 381.64767 c
188.83537 380.01193 181.65407 380.18387 173.79393 382.41614 c
186.03738 353.7345 l
160.92584 347.00586 l
158.86974 389.25909 l
h
W*
0 0 380 480 rc
134.51703 426.24637 m
188.12148 440.60965 l
210.99475 355.24542 l
157.3903 340.88214 l
h
f
Q
0.099249616 0.095094085 0.27768919 sc
q
75.525589 439.72015 m
217.80608 477.84409 l
247.17221 368.24817 l
104.89172 330.12424 l
h
W
167.58691 410.60306 m
172.1042 397.58923 176.42494 391.63489 180.54913 392.73996 c
186.73578 394.39767 190.94167 399.69684 193.65622 400.42419 c
195.63504 400.95444 195.85088 398.38165 195.02682 396.21045 c
194.34694 394.41913 189.46465 391.55988 190.08833 389.23227 c
190.71201 386.90466 194.39328 389.82108 194.76317 388.44061 c
195.37502 386.15717 197.25719 382.05997 193.25864 380.98856 c
189.21198 379.90427 177.21783 378.25699 173.63445 383.67703 c
171.32181 387.17496 168.35901 394.91351 164.74603 406.89267 c
164.4928 406.8558 164.23898 406.80374 163.98566 406.73587 c
160.51846 405.80682 158.45422 402.26788 159.37503 398.83139 c
159.84248 397.08682 160.98936 395.70404 162.45897 394.88687 c
161.55089 392.46542 160.49176 389.90631 159.21324 387.21588 c
151.08839 389.50546 142.61905 400.31158 146.33047 413.86691 c
146.68594 420.11554 150.1516 424.3309 154.83351 427.11154 c
158.47949 429.91113 162.68602 431.24377 166.55347 431.18738 c
173.75974 432.47632 180.62186 432.03268 182.74379 431.24585 c
184.51532 424.63437 183.74843 422.32645 172.66237 419.54129 c
170.3302 417.3945 168.90002 414.39066 167.58691 410.60306 c
h
W*
0 0 380 480 rc
133.85052 428.26871 m
188.86644 443.01016 l
205.96016 379.21555 l
150.94426 364.47406 l
h
f
Q
0.60000002 0.4614 0.34799999 sc
q
173.15201 259.56412 m
226.31841 125.51813 l
261.97733 12.193535 l
276.05826 12.193535 l
221.54361 259.56412 l
173.15201 259.56412 l
h
W*
28 0.11771537 324.92557 259.44641 rc
168.15201 264.56412 m
281.05826 264.56412 l
281.05826 7.1935344 l
168.15201 7.1935344 l
h
f
Q
0.69897962 0.54567963 0.40313229 sc
q
162.44609 259.56412 m
161.87994 212.45944 153.62346 149.04063 152.30435 146.10435 c
151.42494 144.14685 121.06644 119.25369 61.228817 71.424881 c
70.927155 61.086582 l
141.53 102.09379 178.465 125.33207 181.73215 130.80142 c
186.63287 139.00545 202.58797 214.49997 215.39774 259.56412 c
162.44609 259.56412 l
h
W*
28 0.11771537 324.92557 259.44641 rc
56.228817 264.56412 m
220.39774 264.56412 l
220.39774 56.086582 l
56.228817 56.086582 l
h
f
Q
0.89253825 0.89253825 0.89253825 sc
q
79.081276 94.805992 m
121.55453 44.188332 l
87.724739 15.801764 l
45.25148 66.419418 l
h
W
59.867558 74.896759 m
56.610409 73.745659 54.366673 72.653923 53.136353 71.621559 c
51.639988 70.365967 49.665596 68.284454 47.213177 65.377029 c
48.669754 63.64114 61.760296 48.040443 86.484795 18.574936 c
91.5261 20.73255 93.107681 23.256046 91.22953 26.145428 c
89.351379 29.034809 87.814323 31.454491 86.618347 33.404472 c
78.062943 63.294945 l
77.898315 63.870098 77.298615 64.202896 76.723457 64.038277 c
76.713623 64.035461 76.703819 64.032501 76.694069 64.029411 c
72.128899 62.581566 l
68.961624 64.05764 66.741692 65.553986 65.469109 67.070595 c
64.435158 68.302811 63.504917 70.422081 62.678383 73.428413 c
62.678398 73.428421 l
62.361214 74.582115 61.168827 75.260239 60.015129 74.943054 c
59.965405 74.929382 59.916183 74.91394 59.867558 74.896759 c
h
W*
28 0.11771537 324.92557 259.44641 rc
64.352211 87.559822 m
111.1645 31.771114 l
86.353775 10.952452 l
39.541496 66.741158 l
h
f
Q
q
256.21158 17.318884 m
254.99973 14.083849 254.3938 11.663297 254.3938 10.057224 c
254.3938 8.1038618 254.71921 5.2534199 255.37004 1.5058986 c
257.63608 1.5058986 278.00134 1.5058986 316.46582 1.5058986 c
318.0535 6.754652 317.13699 9.5882854 313.71637 10.006798 c
310.29572 10.425311 307.45413 10.803194 305.19159 11.140449 c
276.79486 23.799856 l
276.24844 24.043447 275.60803 23.797966 275.36444 23.251556 c
275.36026 23.242208 275.35623 23.232801 275.35233 23.223341 c
273.52701 18.795565 l
270.36038 17.318094 267.78717 16.579359 265.80737 16.579359 c
264.19885 16.579359 261.97745 17.228996 259.14316 18.528269 c
259.14316 18.528282 l
258.05551 19.026884 256.76959 18.549355 256.27097 17.461689 c
256.24948 17.414808 256.22968 17.367176 256.21158 17.318884 c
h
W*
253.31056 0.67319191 66.07666 44.161663 rc
249.3938 28.893988 m
322.22076 28.893988 l
322.22076 -3.4941013 l
249.3938 -3.4941013 l
h
f
Q
0.40988538 0.6304245 0.67453229 sc
q
208.89839 23.865959 m
275.84647 31.103697 l
226.22997 259.56412 l
166.26711 259.56412 l
208.89839 23.865959 l
h
W*
28 0.11771537 324.92557 259.44641 rc
161.26711 264.56412 m
280.84647 264.56412 l
280.84647 18.865959 l
161.26711 18.865959 l
h
f
Q
0.53651023 0.77344537 0.79977149 sc
q
75.076866 88.103905 m
118.99081 36.325577 l
165.24442 86.647758 192.21039 119.48299 199.88873 134.83127 c
207.56708 150.17955 214.46951 191.75717 220.59604 259.56412 c
153.08868 259.56412 l
149.74207 199.91052 147.48621 168.69574 146.32112 165.91977 c
145.15602 163.1438 121.40794 137.20517 75.076866 88.103905 c
h
W*
28 0.11771537 324.92557 259.44641 rc
70.076866 264.56412 m
225.59604 264.56412 l
225.59604 31.325575 l
70.076866 31.325575 l
h
f
Q
0.69897962 0.54567963 0.40313229 sc
q
34.599205 350.35565 m
307.65668 398.50305 l
343.46561 195.42052 l
70.408134 147.27312 l
h
W
256.07248 284.4187 m
294.48477 265.55432 l
304.15082 264.70358 312.40509 262.98004 319.24756 260.38367 c
320.94409 259.31531 323.18549 256.94113 317.03751 256.33569 c
310.88953 255.73026 304.44968 254.81827 303.97571 252.6118 c
303.50174 250.40535 307.60678 248.59044 306.40463 245.51416 c
305.60324 243.46329 299.45541 247.16739 287.96124 256.62646 c
251.81285 264.58914 l
256.07248 284.4187 l
h
125.5733 260.52335 m
147.88133 264.36691 l
141.9131 217.72395 138.61896 192.95302 137.99893 190.05412 c
136.60384 183.53159 143.46208 175.18182 146.57436 170.59363 c
139.87016 166.07129 138.52994 178.20512 130.10139 172.33807 c
122.4082 166.98291 117.27486 158.83246 106.54862 163.06836 c
105.2299 163.58914 103.44091 166.11002 106.21236 168.81514 c
113.11707 175.5546 122.77525 186.92204 123.75953 190.27672 c
125.10176 194.85143 125.70635 218.26697 125.5733 260.52335 c
h
W*
0 0 380 480 rc
83.204758 259.01459 m
318.70822 300.54019 l
337.09286 196.27563 l
101.58942 154.75002 l
h
f
Q
0.90829611 0.46209422 0.075046249 sc
q
34.599205 350.35565 m
307.65668 398.50305 l
343.46561 195.42052 l
70.408134 147.27312 l
h
W
172.51265 364.77579 m
181.45952 367.97672 l
220.87256 344.59134 244.89615 290.55026 292.1275 268.00665 c
284.2261 253.77162 l
209.86601 249.90547 179.67101 315.66534 172.51265 364.77579 c
h
W*
0 0 380 480 rc
166.88594 371.72079 m
287.15225 382.24274 l
298.72018 250.0206 l
178.45389 239.49866 l
h
f
Q
0.86646914 0.89152956 0.91185695 sc
q
34.599205 350.35565 m
307.65668 398.50305 l
343.46561 195.42052 l
70.408134 147.27312 l
h
W
152.64061 242.33299 m
189.6273 248.85475 216.83394 253.65201 234.26051 256.72479 c
237.99013 257.38242 236.34244 262.6174 235.32649 265.22647 c
223.60121 295.33823 193.37973 324.69705 185.54639 369.12216 c
161.35561 368.6445 l
147.37761 334.04657 147.40906 294.48956 152.64061 242.33299 c
h
W*
0 0 380 480 rc
125.51057 367.40118 m
219.89958 384.04453 l
242.97382 253.18404 l
148.58481 236.54071 l
h
f
Q
1 0.6085 0.13 sc
q
34.599205 350.35565 m
307.65668 398.50305 l
343.46561 195.42052 l
70.408134 147.27312 l
h
W
137.36018 332.82797 m
133.7684 333.20309 130.65843 335.00674 128.03026 338.23895 c
116.70091 352.17209 118.30865 361.22665 127.01163 365.64432 c
135.71463 370.06201 144.93115 365.74844 159.58289 368.33194 c
160.37982 368.47244 161.11848 368.55142 161.79889 368.56888 c
169.24287 369.44995 l
202.96315 301.86566 217.18448 255.31516 211.90691 229.7984 c
147.66566 218.47095 l
145.4167 208.96815 143.08469 200.89536 140.6696 194.25252 c
123.16502 191.16599 l
112.17149 243.8799 116.90321 291.10056 137.36018 332.82797 c
h
W*
0 0 380 480 rc
87.373909 364.52197 m
194.44003 383.40063 l
226.03313 204.22728 l
118.967 185.34863 l
h
f
Q
q
0 0 380 480 rc
25 0 0 40 147 218 cm
save
225 10 cg_miaiproc 
80 -40 -40{
gsave 1 75 div 1 120 div scale 0 exch translate
currentfile 0 (EOD
)/SubFileDecode filter
L3?{flushfile}{cvx exec}ifelse
75 41 scale
BI
/Width 75
/Height 41
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource ImageDataSource
/MaskedImage true
ID
EI
grestore} bind for
0 40 m 0 0 l 75 0 l 75 40 l h W n EOD
JcD&9pAbR#Rj%g$+oe#Ts-nK]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%f3Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M++9.fRs-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23RsuU]Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%]t+TIoSs-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oafs+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#TpAd&MRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$Ij+i]+oe#Ts-k23Rj%g$+oe#TnWG!oRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts!sQ^s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+8cP8's-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+mY/<*r)$Ds-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23(7QKIRj%g$+oe#Ts-k23Rj%g$+oe#TpAeP"Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k1pN#hDM+9.fRs-k23Rj%g$+oe#Ts-nK]
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%e4
Rj%M+F8q^Qs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%`u+Q\M%k`$Y`Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rqs8JRj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!.Y$<+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2,Q6>:I*T`2"q3N6(Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-j9;s-k23Rj%g$=!@U5+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+nktds-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+nV!@jbk/@M]M>N+9.fRs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$*?kHP+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#u+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!.Y$<+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2#OWNVB
*T`2"l&?baRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-kbes-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-kS`s-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nktds-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+mY.0jbk/@M]Lo;*W)3Hs-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$7j7o%+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Ri!=KRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+
!.Y$<+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k1pN#h#<*T`2"jbk/MP99go+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-m7:s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$"!R]6+nktds-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%]t+Q\M%jbk/@M]Lo;*U8Y+s-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$?m5Q>+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%M+#61/9s-k23J"%V]Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Tpm*&aM]Lo;*T`2"jbk/@M]M_`+TIoSs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+^+i7+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAc04Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%f]Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%Eg+6AD$jbk/@
M]Lo;*T`2"o919rRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#T7/r`"s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+0`RUcs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+od%]+oe#Ts-k23Rj%g$+oe#Tmu\[QM]Lo;*T`2"jbk/@M]M,D*rh]Qs-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k/bs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAdY^
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+mY.0jaW1/jbk/@M]Lo;*T`2"k)18YR3;O!+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rir^MRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+>5t'8s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k1pN#h#<*T`2"jbk/@M]Lo;*T`2"oopQu
J"%V]Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+U.n8+oe#TpAf.3Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%]t+Q\M%jbk/@M]Lo;*T`2"jbk/@M]M/F*rh]Qs-k23Rj%g$+oe#Ts-k23Rj%fNRj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nktds-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2,Q6>:I*T`2"jbk/@M]Lo;
*T`2"jbk/AM]Mec+TIoSs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$"<mf7+obc9+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k2+!.Y$<+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+nV!@jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"p6?a"Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-jlLs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts$iJ$s-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nktds-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2#OWNVB
*T`2"jbk/@M]Lo;*T`2"jbk/@M]M/F*rh]Qs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$/g:7a
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k230q0?dRj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!.Y$<+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+mY.0jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"k)18Y
R3;O!+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-lA!s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%eORj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+nktds-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k1pN#h#<*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*V>R<s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$=<[^6+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+o_e:+oe#Ts-k2+!.Y$<+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%]t+Q\M%jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/FNZS4i+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-mC>s-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#TpAb9pRj!:]Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Tpm*&aM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"r0\]-Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe$;+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+(]TsJs-k23
Rj%g$+oe#Ts-k23Rj%g$+b0N]+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%Eg+6AD$jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]MDQ+9.fRs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-lP&s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAccERj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#TJ,bu]s-k23Rj%g$+oe#Tmu\[QM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
l&?baRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rkl5fRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%M+63!Dts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+mY.0jbk./jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*Vu*Fs-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$*[1QQ+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAe7oRj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k1pN#h#<*T`2"jbk/@M]Lo;*T`2"jbk/@
M]I</M]Lo;*T`2"jbk/LOrs^n+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#<+oe#Ts-k23Rj%M+C]BkIs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%]t+Q\M%jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"k`$Y`Rj%g$+a!aR
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!.Y$<+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2,Q6>:I*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"q3N6(Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-j!3?iQT=s-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nktds-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+nLm>jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]M;L+9.fRs-k23Rj%g$+oe#Ts-k23Rj%g$'d<UH+oe#Ts-k23Rj%g$+oe#Ts-k0(s-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+
!.Y$<+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2#OWNVB
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"kDUG]Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-kJ]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23RisZhRj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nktds-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+mY.0jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*VYjAs-k23Rj%g$+oe#Ts-k23Rj%g$59^&r+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+X$fS+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k2+!.Y$<+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k1oM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/IO<4Fk+oe#T
s-k23Rj%g$+oe#Ts-lt2s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T$ic\>s-k23Rj%g$+nktds-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%Zr+Q\M%jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*Ti8#rgFu0Rj%g$+oe#Ts-k23Rj%g$?m5Q>+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%P,IfTM<+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#TpQco_M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]MJT+9.fRs-k23Rj%g$+oe#Ts'_B?s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAbm,
Rj%g$+oe#Ts-k23Rj%g$+oe$]+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%?d+6AD$jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"l]*%dRj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k239Ud4*Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+.0#b[s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-nK]s-k23Rj%g$+oe#Tm>rCNM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*W)3Hs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%ejRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#TpAdAVRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+m=n,jbk/@Mglc/M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/LOrs^n
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+o`aU+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj!:
~> 0 41 m 0 0 l 75 0 l 75 41 l h W n EOD
pAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+m=n,jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]M>N+9.fRs-k23Rj%g$
+oe$>+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nksDs-k23Rj%g$+oe$]+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TrgFtkM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"kDUG]Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23<LY03Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k2+!$D61+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-nK]s-k23Rj%g$+oe#Ts-k23
Rj%To+Q\M%jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*VPa?s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%esRj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nksns-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2(P^ae:M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/GNun=j+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oa'^+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!(m3[+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+n(O7jbk/@M]Lo;*T`2"jbk/@M]Lo;Ii[X/*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"r0\]-Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Trt_(Is-k23Rj%g$+oe#Ts-k23Rj%g$+nktC
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k1sNZR;?*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`3/*T`2"jbk/@M]Lo;*T`2"jbk/@M]MAP+9.fRs-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23!Lk8,!-A10+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+m+\'jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbmpqk`$Y`Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2/QltLK
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/RQ66-r+oe#;+oe#Ts-k23Ro^d5Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nh0Cjbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*USq0s-k23RiN[PRj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$66ZAu+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k2%OrreD*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/AM]Mba+TIod+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#`+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+mk@4jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"o919rRn"Y%
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-jiKs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k1qN?72>*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]M&A*rh^7+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rfai6Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%`u+Q\M%jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/RQ=(g7Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!!`Im+oe#Ts*pL]s-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Tpm*&aM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*UJh.s-k23Ritr7Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+nksUs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23J"%V]Rj%g$+oe#Ts-k23
Rj%Be+6AD$jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]M\^+TIoSs-k23Rj%g$+oe#Ts-k23Rj%g$+[l@"+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!&4GB+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2#OWNV6M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"mu\[k
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T0E7Lbs-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nkt*s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+mP(/jbk/@M]Lo;*T`2"jbk/@M]Lo;*T_d/*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lr<*W;BKs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k/Ms-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k2+!*]Dl+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k1oM]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jaW1/jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/MP99go+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Riqt8Rj%g$+nktTs-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%Wp+Q\M%jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@E/PauM]Lo;*T`2"jbk/@M]Lo;*U&J(s-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2*Poo+G
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@MZb'^M]Ln`M]MJT+9.fRs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+n:^;jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`1s*T`2"jbk/E
NZS4i+oe#Ts-k23Rj%g$+ob$$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k1uNumD@*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M_6%3M]Lo;*T`2"pm*'&Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts"Tuds-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
pAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+m4e)jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2H*T`2"jbk/@M]M2H*rh]Qs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23*1J,ORj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#TrL"eiM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@Mc_"]M]Lo;*T`2"k)18WQluEu+oe#T
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%e:Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%Qm+Q\M%jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2e*T`2"jbk/@M]Lo;*Uo15s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nks<s-k0]s-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#To919XM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;>oi$b*T`2"
jbk/BN#hkb+TIoSs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!#P[)+oe#Ts-k23Rj%g$+oe#Ts-k23Rj!:]Rj%g$+oe#Ts-k23
Rj%0\*p&;#jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/MP99go+oe$&+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nksf
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k1qN?72>*Im1/*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*TrA%rgFu0Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-kefs-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!($XS+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%`u+Q\M%jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"J)uS/jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]MAP+9.fR
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23RiWaQRj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+nkt;s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Tpm*&aM]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk./jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"kDUG\RNVX"+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$#pK><+oe#Ts-k2+!,MV(+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%?d+6AD$jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Hp$M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*V,C9s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2!O<3MA
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`1Z*FIod*T`2"jbk/@M]Lo;*T`2"jbk/BN#hnd+TIoSs-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+m=n,jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M\R8o
M]Lo;*T`2"jbk/@M]Lo;*T`2"9'(sOnrk0qRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#TrL"eiM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2/*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*TrA%
rgFu0Rj%g$+oe#Ts-k/hs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%Nl+6AD$jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@Ma&6DM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]MAP+9.fRs-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23RirpSRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Tnrk0WM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2Y*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"kDUG\RNVX"+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+Ue=>+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%0\*p&;#jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@MdRReM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*V,C9s-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2,!.P"KRj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Tk`$YFM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T^^f*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/BN#hnd+TIoSs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nksMs-k23Rj%g$+oe#Ts-k23Rj%g$Ij+i]+oe#Ts-k20
R3:UL*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"j\1RQjbk/@M]Lo;
*T`2"nWG!oRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k2+!%@l:+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpQco_M]Lo;*T`3/*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*Ti8#r0\]-2k(ujRj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nkt"s-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%?d+6AD$jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbnU/jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]M2H*rh]Qs-k23Rj%g$+oe#Ts-k23Rj%eURj%g$+oe#Ts-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k0^
~> 0 41 m 0 0 l 75 0 l 75 41 l h W n EOD
pAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nCg=jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2e*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*USq0s-k23Rj%g$+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nksDs-k23Rj%g$+oe$]+oe#Ts-k23Rj%g$
+oe#Ts-k2!O<3MA*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@<JqmZM]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]MV[+TIoSs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k2+!$D61+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TkDXm2jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]LnEM]Lo;*T`2"lAcqcRj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nksns-k23Rj%g$+oe#T
s-k23Rj%g$+oe#Ts-k20R3:UL*T`2"jbk/@M]Lo;*T`2"jbk/@Mglc/M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"oopQuRj%g$+oa'^+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!(m3[+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nq9Ejbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;Ii[X/*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]M#@*r_TNs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Trt_(Is-k23Rj%g$+oe#Ts-k23Rj%g$+nktC
s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2&P98nE*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`3/*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/LOrs^n+oe#Ts-k23Rj%g$
+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23!Lk8,!-A10+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$
+mb72jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbmpqjbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*Ti8#r0\]-Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj$sR*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`1b*T`2"jbk/@McUq\M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]M5I
*rh]Qs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#T
s-k23Rj%g$+oI`Njbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Ei"M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;6650G*T`2"jbk/@M]Lo;*T`2"jbk/TQQZ<t+oe#Ts-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+Q654H*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`27*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`22*U/P)s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]
s-k23Rj%g$+oe#Ts-k23Rj%g$+n:^;jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@ManfL
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*V#:7s-k23Rj%g$
+oe#Ts-jiKs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k1uNumD@
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2a*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/AM]MY\+TIoSs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23
Rfai6Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k23Rj%g$+m4e)jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@MdRReM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"lAcqcRj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!!`Im+oe#Ts*pL]s-k23Rj%g$
+oe#Tqj8MfM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Gs^M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*V,C9s-k23Rj%g$+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%g$+nksUs-k23Rj%g$+oe#Ts-k23Rj%g$+nh0Cjbk/@Iu>?/M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*CT"I*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/AM]MY\+TIoSs-k23Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k2+!&4GB+oe#T
s-k23Rj%g$+oe#Ts-k2$OWW\C*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo/M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"0BJ*4jbk/@M]Lo;*T`2"lAcqc
Rj%g$+oe#Ts-k23Rj%g$+oe#Ts-k23Rj%g$+nkt*s-k23Rj%g$+oe#Ts-k23Rj%g$+mP(/jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T_d/*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"nrk.6s-k23Rj%g$+oe#Ts-k23Rj%g$+oe#T
s-k2+!*]Dl+oe#Ts-k23Rj%g$+oe#TrgFtlM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jaW1/jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lr<*Vu*Fs-k23Rj%g$+oe#Ts-k23Riqt8Rj%g$+nktTs-k23Rj%g$+oe#Ts-k23Rj%Qm
+Q\M%jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@E/PauM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/ENZS4i+oe#Ts-k23
Rj%g$+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k2&P98nE*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@MZb'^M]Ln`M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"mu\[kRj%g$+oe#Ts-k23Rj%g$+oe#TpAf^CRj%g$+oe#T
s-k23Rj%g$+mk@4jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`1s*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T]bK*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*VGX=s-k23Rj%g$+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#Ts-k1pN#h#<*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M_6%3M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jY;Z6jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/AM]MY\+TIoSs-k23Rj%g$+oe#T
pAf^CRj%g$+oe#Ts-k23Rj%Zr+Q\M%jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2H*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@*/bj!M]Lo;*T`2"k`$Y^R3;O!+oe#Ts-k23Rj%M+J,bu]s-k23Rj%g$+oe#ToopQ[M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@Mc_"]M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"m#N4f
Rj%e:Rj%g$+oe#TpAf^CRj%g$+oe#Ts-k23Rj%6_*p&;#jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2e*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*V#:7s-k23Rj%g$+nks<s-k0]s-k23Rj%g$
+oe#Tl&?bGM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;>oi$b*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]MMV+9.fRs-k2+!#P[)+oe#Ts-k23Rj%d"+QeS&jbk/@M]I</M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2M*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"kDUGUR3h'l62(@1
s-k23Rj%g$+oe#Tpm*&aM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*Im1/*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbko8jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]LN71<Z1`\u'AFY`5$^Y):0>M8d^5!($XS+oe#Ts-k23Rj%?d+6AD$jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"J)uS/jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*Sui+d$R8;UE3sLXFd%QUQ*..M8d\q`QX1Xb_a<_
M8d\q`QX1XbkD*<s-k23Rj%g$+oe#Tm#N4LM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk./jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*TE#%e<W59T38S%
Gbh[5P.nJ``QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1X$-\7Fb_a<_M8d^5!,MV(+oe#Ts-k23Rj$sR
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Hp$M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"foe/6S5?eoDQ9t%R(KMY`6!kTb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q
`QX1Xb_a<_M8d\q`QX1Xb_a<_pAf^CRj%g$+oe#Tqj8MfM]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`1Z*FIod*T`2"hN'/4Qq"ldA?N"dS[bGS_S_5Lb_a<_M8d\q`QX1X
b_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`Q\&VJ,bu]
s-k23Rj%Hh+6AD$jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lc8,Li#B`1L5?WYKfS
Z^?oj\V\;LM8d\q`QX1Xb_a<_8r:O2M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q
`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_pAf^CRj%g$+oe#Tmu\[QM]Lo;*T`2"jbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"
jbk/@M]Lo;*nc]5b+)>?VJiH=Ng[M^M8[Pn`QX1Xb_a:gb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_
M8d\q`QX1Xb_a<_M8d[rM8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_
M8d\q`Q\&VJ,bu]s-k23Rj%$U*p&;#jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*Sui,c^75;ULgU0K:TNJN5EMi`QX1Xb_a<_M8d\q`QX1X
b_a<_M8d\q`BVS'`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1X
b_a<_M8d\q`QTH]`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_pAf^CRj%g$+oRfOjbk/@M]Lo;
*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T;r%e<W89T3J\&HDIp:
Oh\Ja`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a;<b_a<_M8d\q`QX1Xb_a<_
M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q
`QX1XbR99Hb_a<_M8d\q`Q\&VJ,bu]s-k2+Q654H*T`2"jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"jbk/@
M]Lo;*T`2#fTS/7S5HkpDlL"&R(KPY`6*qUb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1X
b_a<_M8d\q`QX1Xb_a<_M8d\q`F-oH`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1X
b_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d^6!.P"KRj%g$
+nCg=jbk/@M]Lo;*T`2"jbk/@M]Lo;*T`2"hiKA6R7G#eB!8=jS[bJS_Sh;Mb_a<_M8d\q`QX1Xb_a<_
M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_]cIb_a<_
M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q
`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1XbkD)Ns-k23Rj%-Z*p&;#jbk/BO!X+cIn/t7D=kr9q;/mb
o]_U_d>>idM8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1X
b_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M+kn4M8d\q`QX1X
b_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_
M8d^5!"o7#+oe&Yo>?FZf<P8@g].9Oo)ArSa3BI[b_a;gb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_
M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q
`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q2oX!t`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q
`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1XbkD)@s-k23YuBoe+8l*9M8d\q`QX1Xb_a<_M8d\q`QX1X
b_a<_M8d\q`IH*g`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1X
b_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_
M8d\q`QX1Xb_[O_b_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QWi
~> 0 41 m 0 40 l 75 40 l 75 41 l h W n EOD
pAbBsRj%g:;sF=3r;HSN`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q
`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1X
b_a<_M8d\q`QX1X6Hk;*b_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1Xb_a<_M8d\q`QX1X
b_a<_M8d\q`QX1Xb_a<_m/MY:JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$hZ&*
~> restore
ep
end
%%Trailer
%%EOF
